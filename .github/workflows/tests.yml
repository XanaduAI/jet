name: Tests
on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "docs/**"
      - "README.rst"

jobs:
  test-ubuntu:
    name: Build (C++) on Ubuntu
    runs-on: ubuntu-20.04

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Install dependencies
        run: sudo apt install -y libomp-dev libopenblas-dev

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize build directory
        run: |
          mkdir build
          cd build
          cmake -DENABLE_OPENMP=ON -DBUILD_TESTS=ON ../

      - name: Build Jet
        run: |
          cd build
          make -j`nproc`

      - name: Run tests
        run: |
          cd build
          mkdir test/results
          ./test/runner --order lex --reporter junit --out test/results/report.xml

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ubuntu-test-report
          path: build/test/results/report.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: Test Report (C++)
          files: build/test/results/report.xml

  test-macos:
    name: Build (C++) on MacOS
    runs-on: macos-10.15

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Install dependencies
        run: brew install libomp

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize build directory
        run: |
          mkdir build
          cd build
          cmake -DENABLE_OPENMP=ON -DBUILD_TESTS=ON ../

      - name: Build Jet
        run: |
          cd build
          make -j`sysctl -n hw.physicalcpu`

      - name: Run tests
        run: |
          cd build
          mkdir test/results
          ./test/runner --order lex --reporter junit --out test/results/report.xml

      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: macos-test-report
          path: build/test/results/report.xml
